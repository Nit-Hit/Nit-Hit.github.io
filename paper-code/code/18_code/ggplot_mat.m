%-----------------------------------------------------------------------
% Chenfei Ye 08/07/2017
% This script is designed for generate matrice for ggplot based on Level 4
% mat_Test: matrix for TestA/B. 0.5 means not significant, 1 or -1 means significant. 1 for TestB, -1 for TestA
% mat_top: matrix for connections with R among top 5%. 1 means significant positive connections, -1 means significant negative connections
% mat_fix: matrix for connections with R square > R_thresh. 1 means significant positive connections, -1 means significant negative connections
% mat_High_fixnum/mat_Low_fixnum: for connections with Top N correlations. N is a fixed number determined by R_thresh_num.
% NOTE: 1. this function is not inserted in ratiolog_matrix.m. Run
% ratiolog_matrix.m first, then manually run this function.
% NOTE: 2. raw_var_L4_XXX.mat:  The best way is to generate raw_var_L4_XXX is to use
% EXCEL vloolup function based on raw_var_L5 (generated by
% ratiolog_matrix.m),because the order must be consistent with Level3
% ------cye7@jhu.edu
function [mat_TestA, mat_TestB,mat_High_top,mat_Low_top,mat_High_fix,mat_Low_fix,mat_High_fixnum,mat_Low_fixnum]=ggplot_mat(img_modal,Threshmap_High,Threshmap_Low,raw_var_L5,stat_R,Highmap_sq,Lowmap_sq,Highmap,Lowmap)
switch img_modal
    case 1
        [~, ~,raw_remove]=xlsread('C:\Users\susumulab\Desktop\cye_code\BIOCARD_matrix\matrix\Structures_removed_T1combine_LV.xlsx','vol'); % read excel matrix
        load('raw_var_L4_vol.mat');
        idx_col_L4=6;
        idx_col_L5=5;
    case {2,3,4,5,6,7}
        [~, ~,raw_remove]=xlsread('C:\Users\susumulab\Desktop\cye_code\BIOCARD_matrix\matrix\Structures_removed_T1combine_LV.xlsx','others'); % read excel matrix
        load('raw_var_L4_other.mat');
        idx_col_L4=6;
        idx_col_L5=5;
    case 8
        [~, ~,raw_remove]=xlsread('C:\Users\susumulab\Desktop\cye_code\BIOCARD_matrix\matrix\Structures_removed_T1combine_LV.xlsx','fmri'); % read excel matrix 
        load('raw_var_L4_fmri.mat');
        idx_col_L4=7;
        idx_col_L5=2;
end

N=length(raw_var_L4); % number of parcels
mat_TestA=ones(N,N).*0.5; 
mat_TestB=mat_TestA;
mat_High_top=mat_TestA;
mat_Low_top=mat_TestA;
mat_High_fix=mat_TestA;
mat_Low_fix=mat_TestA;
mat_High_fixnum=mat_TestA;
mat_Low_fixnum=mat_TestA;
R_thresh=0.5;
R_thresh_num=110;% Change this number to get fix number of Level 4. R_thresh_num is for Level 5.

Threshmap_High_fix=Highmap_sq>R_thresh;
Threshmap_High_fix(tril(true(length(Threshmap_High_fix))))=0;
Threshmap_Low_fix=Lowmap_sq>R_thresh;
Threshmap_Low_fix(tril(true(length(Threshmap_Low_fix))))=0;

Highmap_sq(tril(true(length(Highmap_sq))))=0;
Highmap_sq_sort=sort(Highmap_sq(:),'descend');
R_thresh_num_High=Highmap_sq_sort(R_thresh_num);
Threshmap_High_fixnum=Highmap_sq>=R_thresh_num_High;
Lowmap_sq(tril(true(length(Lowmap_sq))))=0;
Lowmap_sq_sort=sort(Lowmap_sq(:),'descend');
R_thresh_num_Low=Lowmap_sq_sort(R_thresh_num);
Threshmap_Low_fixnum=Lowmap_sq>=R_thresh_num_Low;


% p_cell_High_top=cell(3,0); % intialize
% for m=1:length(Threshmap_High)
%     idx=find(Threshmap_High(m,:)==1);
%     if ~isempty(idx)
%         for i =1:length(idx)
%             p_cell_High_top(1,end+1)={[char(raw_var_L5(m))]};
%             p_cell_High_top(2,end)={[char(raw_var_L5(idx(i)))]};
%             p_cell_High_top(3,end)={Highmap(m,idx(i))};
%         end
%     end
% end
% 
% p_cell_Low_top=cell(3,0); % intialize
% for m=1:length(Threshmap_Low)
%     idx=find(Threshmap_Low(m,:)==1);
%     if ~isempty(idx)
%         for i =1:length(idx)
%             p_cell_Low_top(1,end+1)={[char(raw_var_L5(m))]};
%             p_cell_Low_top(2,end)={[char(raw_var_L5(idx(i)))]};
%             p_cell_Low_top(3,end)={Lowmap(m,idx(i))};
%         end
%     end
% end
% 
% p_cell_High_fix=cell(3,0); % intialize
% for m=1:length(Threshmap_High_fix)
%     idx=find(Threshmap_High_fix(m,:)==1);
%     if ~isempty(idx)
%         for i =1:length(idx)
%             p_cell_High_fix(1,end+1)={[char(raw_var_L5(m))]};
%             p_cell_High_fix(2,end)={[char(raw_var_L5(idx(i)))]};
%             p_cell_High_fix(3,end)={Highmap(m,idx(i))};
%         end
%     end
% end
% 
% 
% p_cell_Low_fix=cell(3,0); % intialize
% for m=1:length(Threshmap_Low_fix)
%     idx=find(Threshmap_Low_fix(m,:)==1);
%     if ~isempty(idx)
%         for i =1:length(idx)
%             p_cell_Low_fix(1,end+1)={[char(raw_var_L5(m))]};
%             p_cell_Low_fix(2,end)={[char(raw_var_L5(idx(i)))]};
%             p_cell_Low_fix(3,end)={Lowmap(m,idx(i))};
%         end
%     end
% end

p_cell_High_fixnum=cell(3,0); % intialize
for m=1:length(Threshmap_High_fixnum)
    idx=find(Threshmap_High_fixnum(m,:)==1);
    if ~isempty(idx)
        for i =1:length(idx)
            p_cell_High_fixnum(1,end+1)={[char(raw_var_L5(m))]};
            p_cell_High_fixnum(2,end)={[char(raw_var_L5(idx(i)))]};
            p_cell_High_fixnum(3,end)={Highmap(m,idx(i))};
        end
    end
end


p_cell_Low_fixnum=cell(3,0); % intialize
for m=1:length(Threshmap_Low_fixnum)
    idx=find(Threshmap_Low_fixnum(m,:)==1);
    if ~isempty(idx)
        for i =1:length(idx)
            p_cell_Low_fixnum(1,end+1)={[char(raw_var_L5(m))]};
            p_cell_Low_fixnum(2,end)={[char(raw_var_L5(idx(i)))]};
            p_cell_Low_fixnum(3,end)={Lowmap(m,idx(i))};
        end
    end
end

% 
% for i = 1: size(p_cell_High_top,2)
%     [~,index1] = ismember(raw_remove(:,idx_col_L5),p_cell_High_top(1,i));
%     [~,index1_1] = ismember(raw_var_L4,raw_remove(find(index1),idx_col_L4));
%     [~,index2] = ismember(raw_remove(:,idx_col_L5),p_cell_High_top(2,i));
%     [~,index2_2] = ismember(raw_var_L4,raw_remove(find(index2),idx_col_L4));
%     mat_High_top(find(index1_1),find(index2_2))=1;
%     mat_High_top(find(index2_2),find(index1_1))=1;
% end
% 
% for i = 1: size(p_cell_Low_top,2)
%     [~,index1] = ismember(raw_remove(:,idx_col_L5),p_cell_Low_top(1,i));
%     [~,index1_1] = ismember(raw_var_L4,raw_remove(find(index1),idx_col_L4));
%     [~,index2] = ismember(raw_remove(:,idx_col_L5),p_cell_Low_top(2,i));
%     [~,index2_2] = ismember(raw_var_L4,raw_remove(find(index2),idx_col_L4));
%     mat_Low_top(find(index1_1),find(index2_2))=1;
%     mat_Low_top(find(index2_2),find(index1_1))=1;
% end

for i = 1: size(stat_R.fdr_High,2)
    [~,index1] = ismember(raw_remove(:,idx_col_L5),stat_R.fdr_High(1,i));
    [~,index1_1] = ismember(raw_var_L4,raw_remove(find(index1),idx_col_L4));
    [~,index2] = ismember(raw_remove(:,idx_col_L5),stat_R.fdr_High(2,i));
    [~,index2_2] = ismember(raw_var_L4,raw_remove(find(index2),idx_col_L4));
    mat_TestB(find(index1_1),find(index2_2))=1;
    mat_TestB(find(index2_2),find(index1_1))=1;
end

for i = 1: size(stat_R.fdr_Low,2)
    [~,index1] = ismember(raw_remove(:,idx_col_L5),stat_R.fdr_Low(1,i));
    [~,index1_1] = ismember(raw_var_L4,raw_remove(find(index1),idx_col_L4));
    [~,index2] = ismember(raw_remove(:,idx_col_L5),stat_R.fdr_Low(2,i));
    [~,index2_2] = ismember(raw_var_L4,raw_remove(find(index2),idx_col_L4));
    mat_TestA(find(index1_1),find(index2_2))=1;
    mat_TestA(find(index2_2),find(index1_1))=1;
end
% 
% for i = 1: size(p_cell_High_fix,2)
%     [~,index1] = ismember(raw_remove(:,idx_col_L5),p_cell_High_fix(1,i));
%     [~,index1_1] = ismember(raw_var_L4,raw_remove(find(index1),idx_col_L4));
%     [~,index2] = ismember(raw_remove(:,idx_col_L5),p_cell_High_fix(2,i));
%     [~,index2_2] = ismember(raw_var_L4,raw_remove(find(index2),idx_col_L4));
%     mat_High_fix(find(index1_1),find(index2_2))=1;
%     mat_High_fix(find(index2_2),find(index1_1))=1;
% end
% 
% for i = 1: size(p_cell_Low_fix,2)
%     [~,index1] = ismember(raw_remove(:,idx_col_L5),p_cell_Low_fix(1,i));
%     [~,index1_1] = ismember(raw_var_L4,raw_remove(find(index1),idx_col_L4));
%     [~,index2] = ismember(raw_remove(:,idx_col_L5),p_cell_Low_fix(2,i));
%     [~,index2_2] = ismember(raw_var_L4,raw_remove(find(index2),idx_col_L4));
%     mat_Low_fix(find(index1_1),find(index2_2))=1;
%     mat_Low_fix(find(index2_2),find(index1_1))=1;
% end

for i = 1: size(p_cell_High_fixnum,2)
    [~,index1] = ismember(raw_remove(:,idx_col_L5),p_cell_High_fixnum(1,i));
    [~,index1_1] = ismember(raw_var_L4,raw_remove(find(index1),idx_col_L4));
    [~,index2] = ismember(raw_remove(:,idx_col_L5),p_cell_High_fixnum(2,i));
    [~,index2_2] = ismember(raw_var_L4,raw_remove(find(index2),idx_col_L4));
    mat_High_fixnum(find(index1_1),find(index2_2))=1;
    mat_High_fixnum(find(index2_2),find(index1_1))=1;
end

for i = 1: size(p_cell_Low_fixnum,2)
    [~,index1] = ismember(raw_remove(:,idx_col_L5),p_cell_Low_fixnum(1,i));
    [~,index1_1] = ismember(raw_var_L4,raw_remove(find(index1),idx_col_L4));
    [~,index2] = ismember(raw_remove(:,idx_col_L5),p_cell_Low_fixnum(2,i));
    [~,index2_2] = ismember(raw_var_L4,raw_remove(find(index2),idx_col_L4));
    mat_Low_fixnum(find(index1_1),find(index2_2))=1;
    mat_Low_fixnum(find(index2_2),find(index1_1))=1;
end

mat_TestA=triu(mat_TestA,1);
mat_TestB=triu(mat_TestB,1);
% mat_High_top=triu(mat_High_top,1);
% mat_Low_top=triu(mat_Low_top,1);
% mat_High_fix=triu(mat_High_fix,1);
% mat_Low_fix=triu(mat_Low_fix,1);
mat_High_fixnum=triu(mat_High_fixnum,1);
mat_Low_fixnum=triu(mat_Low_fixnum,1);
disp(['Threshold of HAN = ',num2str(R_thresh_num_High)])
disp(['Threshold of LAN = ',num2str(R_thresh_num_Low)])
disp(['Number of HAN in Level4 = ',num2str(length(find(mat_High_fixnum==1)))])
disp(['Number of LAN in Level4 = ',num2str(length(find(mat_Low_fixnum==1)))])
